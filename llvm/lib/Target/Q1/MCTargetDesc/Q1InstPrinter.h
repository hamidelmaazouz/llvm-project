#ifndef LLVM_LIB_TARGET_Q1_MCTARGETDESC_Q1INSTPRINTER_H
#define LLVM_LIB_TARGET_Q1_MCTARGETDESC_Q1INSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"
#include "llvm/MC/MCRegister.h"
#include <cstdint>

namespace llvm {

class MCAsmInfo;
class MCOperand;

class Q1InstPrinter : public MCInstPrinter {
public:
  Q1InstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}

  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                 const MCSubtargetInfo &STI, raw_ostream &O) override;
  void printRegName(raw_ostream &O, MCRegister Reg) override;
  void printOperand(const MCInst *MI, int OpNum, raw_ostream &O);

  // Autogenerated by tblgen.
  std::pair<const char *, uint64_t>
  getMnemonic(const MCInst &MI) const override;
  void printInstruction(const MCInst *MI, uint64_t Address, raw_ostream &O);
  bool printAliasInstr(const MCInst *MI, uint64_t Address, raw_ostream &O);
  static const char *getRegisterName(MCRegister Reg);
};

} // namespace llvm

#endif // LLVM_LIB_TARGET_Q1_MCTARGETDESC_Q1INSTPRINTER_H
